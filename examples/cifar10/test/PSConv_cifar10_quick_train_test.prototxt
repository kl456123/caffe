name: "PSConv_CIFAR10"
# N.B. input image must be in CIFAR-10 format
# as described at http://www.cs.toronto.edu/~kriz/cifar.html
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "../mean.binaryproto"
  }
  data_param {
    source: "../cifar10_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "../mean.binaryproto"
  }
  data_param {
    source: "../cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 90
    pad: 1
    kernel_size: 3
    stride: 1
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    engine:CAFFE
    dilation:2
    position_sensetive:true
    ps_group:9
    num_output: 90
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer{

  name:"bn2"
  bottom:"conv2"
  top:"conv2"
  type:"BatchNorm"
}
layer{
  name:"scale2"
  bottom:"conv2"
  top:"conv2"
  type:"Scale"
  scale_param{
bias_term:true
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}


layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  convolution_param {
    ps_group:9
    position_sensetive:true
    engine:CAFFE
    num_output: 360
    pad: 1
    kernel_size: 3
    stride: 1
  }
}


layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    dilation:2
    ps_group:9
    position_sensetive:true
    engine:CAFFE
    num_output: 10
    pad: 1
    kernel_size: 3
    stride: 1
  }
}

layer {
  name: "pool"
  type: "Pooling"
  bottom: "conv4"
  top: "pool"
  pooling_param {
    pool: AVE
    global_pooling:true
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "pool"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "pool"
  bottom: "label"
  top: "loss"
}
